SECTION "ROM Bank $004", ROMX[$4000], BANK[$4]

    ; $4000
PAL_Cardscene_Main::
    INCBIN "autogenerated/assets/cardscene/Cardscene.pal"

    ; $4030
PAL_Cardscene_Textbox::
    INCBIN "autogenerated/assets/cardscene/Textbox.pal"


INCLUDE "assets/fightscene/fightscene_effects.asm"
INCLUDE "source/game/creature/creature_table.asm"


    ; $5484

Call_004_5484:
    ld a, [wX100]                                 ; $5484: $FA $2F $C9
    add d                                         ; $5487: $82
    ld [hl+], a                                   ; $5488: $22
    ld a, [wX10]                                 ; $5489: $FA $2E $C9
    add d                                         ; $548C: $82
    ld [hl+], a                                   ; $548D: $22
    ld a, [wX1]                                 ; $548E: $FA $2D $C9
    add d                                         ; $5491: $82
    ld [hl+], a                                   ; $5492: $22
    ret                                           ; $5493: $C9

Call_004_5494::
    push bc                                       ; $5494: $C5
    xor a                                         ; $5495: $AF
    ld [$CD1F], a                                 ; $5496: $EA $1F $CD
    Battery_SetBank "XRAM Gamestate"
    Battery_On
    ld a, [$A122]                                 ; $54A6: $FA $22 $A1
    ld b, a                                       ; $54A9: $47
    Battery_Off
    ld a, b                                       ; $54AE: $78
    cp $D0                                        ; $54AF: $FE $D0
    jr c, jr_004_54B8                             ; $54B1: $38 $05

    ld a, $01                                     ; $54B3: $3E $01
    ld [$CD1F], a                                 ; $54B5: $EA $1F $CD

jr_004_54B8:
    pop bc                                        ; $54B8: $C1
    ret                                           ; $54B9: $C9


Call_004_54BA:
    ld d, $0A                                     ; $54BA: $16 $0A

jr_004_54BC:
    ld [hl+], a                                   ; $54BC: $22
    inc a                                         ; $54BD: $3C
    dec d                                         ; $54BE: $15
    jr nz, jr_004_54BC                            ; $54BF: $20 $FB

    ld bc, $0017                                  ; $54C1: $01 $17 $00
    add hl, bc                                    ; $54C4: $09
    ld d, $0A                                     ; $54C5: $16 $0A

jr_004_54C7:
    ld [hl+], a                                   ; $54C7: $22
    inc a                                         ; $54C8: $3C
    dec d                                         ; $54C9: $15
    jr nz, jr_004_54C7                            ; $54CA: $20 $FB

    ld bc, $0016                                  ; $54CC: $01 $16 $00
    add hl, bc                                    ; $54CF: $09
    ld d, $0A                                     ; $54D0: $16 $0A

jr_004_54D2:
    ld [hl+], a                                   ; $54D2: $22
    inc a                                         ; $54D3: $3C
    dec d                                         ; $54D4: $15
    jr nz, jr_004_54D2                            ; $54D5: $20 $FB

    ret                                           ; $54D7: $C9


Jump_004_54D8:
    call Frame_ClearAll
    call ScreenHide                                    ; $54DB: $CD $C3 $07
    Do_CallForeign Menu_MainMenu_RestoreVRAMObjectsChars
    Cardscene_RestoreBackgroundCharsBC
    Do_CallForeign TextboxXX_Init ;Bank 0
    call ScreenShow                                    ; $5516: $CD $EA $07
    ret                                           ; $5519: $C9


Call_004_551A:
    push de                                       ; $551A: $D5
    and a                                         ; $551B: $A7
    jr z, jr_004_552D                             ; $551C: $28 $0F

    xor a                                         ; $551E: $AF
    ld [rVBK], a                                 ; $551F: $EA $4F $FF
    DerefHL
    ld a, h                                       ; $5525: $7C
    or l                                          ; $5526: $B5
    jr z, jr_004_5537                             ; $5527: $28 $0E

    ld d, h                                       ; $5529: $54
    ld e, l                                       ; $552A: $5D
    jr jr_004_5544                                ; $552B: $18 $17

jr_004_552D:
    xor a                                         ; $552D: $AF
    ld [rVBK], a                                 ; $552E: $EA $4F $FF
    ld e, [hl]                                    ; $5531: $5E
    cp e                                          ; $5532: $BB
    ld d, $00                                     ; $5533: $16 $00
    jr nz, jr_004_5544                            ; $5535: $20 $0D

jr_004_5537:
    ld a, $FA                                     ; $5537: $3E $FA
    ld [wX100], a                                 ; $5539: $EA $2F $C9
    ld [wX10], a                                 ; $553C: $EA $2E $C9
    ld [wX1], a                                 ; $553F: $EA $2D $C9
    jr jr_004_5547                                ; $5542: $18 $03

jr_004_5544:
    call Math_ConvertNumberToDigits                                    ; $5544: $CD $1A $04

jr_004_5547:
    pop hl                                        ; $5547: $E1
    ld d, $86                                     ; $5548: $16 $86
    call Call_004_5484                            ; $554A: $CD $84 $54
    ret                                           ; $554D: $C9


Call_004_554E:
    ld a, [hl]                                    ; $554E: $7E
    ld [wBattle_CopyBuffer_ListIndex], a                                 ; $554F: $EA $8C $CD
    ld bc, wMenu_Battle_TableRowBuffer                                  ; $5552: $01 $91 $CD
    FSet16 wBattle_CopyBuffer_Destination, bc                                    ; $555A: $70
    Do_CallForeign CreatureName_CopyToDest
    ld bc, wMenu_Battle_TableRowBuffer                                  ; $5563: $01 $91 $CD
    FSet16 wMenu_MainMenu_StringToTileset_Source, bc                                    ; $556B: $70
    ld a, $0A                                     ; $556C: $3E $0A
    ld [wMenu_MainMenu_StringToTileset_Length], a                                 ; $556E: $EA $42 $CC
    Do_CallForeign Menu_MainMenu_StringToTileset
    ret                                           ; $5579: $C9


Call_004_557A:
    ; TODO - looks like a copy of the mainmenu almost
    xor a                                         ; $557A: $AF
    ld [rVBK], a                                 ; $557B: $EA $4F $FF
    ld bc, $0233                                  ; $557E: $01 $33 $02
    ld hl, $9C00                                  ; $5581: $21 $00 $9C

jr_004_5584:
    ld a, $80                                     ; $5584: $3E $80
    ld [hl+], a                                   ; $5586: $22
    Dec16Loop bc, jr_004_5584                            ; $558A: $20 $F8

    ld a, $85                                     ; $558C: $3E $85
    ld [$9C00], a                                 ; $558E: $EA $00 $9C
    ld [$9C13], a                                 ; $5591: $EA $13 $9C
    ld [$9D80], a                                 ; $5594: $EA $80 $9D
    ld [$9D93], a                                 ; $5597: $EA $93 $9D
    ld [$9E20], a                                 ; $559A: $EA $20 $9E
    ld [$9E33], a                                 ; $559D: $EA $33 $9E
    ld a, $83                                     ; $55A0: $3E $83
    ld hl, $9C01                                  ; $55A2: $21 $01 $9C
    ld c, $12                                     ; $55A5: $0E $12

jr_004_55A7:
    ld [hl+], a                                   ; $55A7: $22
    dec c                                         ; $55A8: $0D
    jr nz, jr_004_55A7                            ; $55A9: $20 $FC

    ; TODO - these are macros used in mainmenu
    ; Menu_MainMenu_SetTilemapHorizontal
    ; Menu_MainMenu_SetTilemapVertical

    ld a, $83                                     ; $55AB: $3E $83
    ld hl, $9D81                                  ; $55AD: $21 $81 $9D
    ld c, $12                                     ; $55B0: $0E $12

jr_004_55B2:
    ld [hl+], a                                   ; $55B2: $22
    dec c                                         ; $55B3: $0D
    jr nz, jr_004_55B2                            ; $55B4: $20 $FC

    ld a, $83                                     ; $55B6: $3E $83
    ld hl, $9E21                                  ; $55B8: $21 $21 $9E
    ld c, $12                                     ; $55BB: $0E $12

jr_004_55BD:
    ld [hl+], a                                   ; $55BD: $22
    dec c                                         ; $55BE: $0D
    jr nz, jr_004_55BD                            ; $55BF: $20 $FC

    ld a, $84                                     ; $55C1: $3E $84
    ld hl, $9DA0                                  ; $55C3: $21 $A0 $9D
    ld c, $04                                     ; $55C6: $0E $04
    ld de, $0020                                  ; $55C8: $11 $20 $00

jr_004_55CB:
    ld [hl], a                                    ; $55CB: $77
    add hl, de                                    ; $55CC: $19
    dec c                                         ; $55CD: $0D
    jr nz, jr_004_55CB                            ; $55CE: $20 $FB

    ld a, $84                                     ; $55D0: $3E $84
    ld hl, $9DB3                                  ; $55D2: $21 $B3 $9D
    ld c, $04                                     ; $55D5: $0E $04
    ld de, $0020                                  ; $55D7: $11 $20 $00

jr_004_55DA:
    ld [hl], a                                    ; $55DA: $77
    add hl, de                                    ; $55DB: $19
    dec c                                         ; $55DC: $0D
    jr nz, jr_004_55DA                            ; $55DD: $20 $FB

    ld a, $84                                     ; $55DF: $3E $84
    ld hl, $9C20                                  ; $55E1: $21 $20 $9C
    ld c, $0B                                     ; $55E4: $0E $0B
    ld de, $0020                                  ; $55E6: $11 $20 $00

jr_004_55E9:
    ld [hl], a                                    ; $55E9: $77
    add hl, de                                    ; $55EA: $19
    dec c                                         ; $55EB: $0D
    jr nz, jr_004_55E9                            ; $55EC: $20 $FB

    ld a, $84                                     ; $55EE: $3E $84
    ld hl, $9C33                                  ; $55F0: $21 $33 $9C
    ld c, $0B                                     ; $55F3: $0E $0B
    ld de, $0020                                  ; $55F5: $11 $20 $00

jr_004_55F8:
    ld [hl], a                                    ; $55F8: $77
    add hl, de                                    ; $55F9: $19
    dec c                                         ; $55FA: $0D
    jr nz, jr_004_55F8                            ; $55FB: $20 $FB

    ld a, [$CD54]                                 ; $55FD: $FA $54 $CD
    and a                                         ; $5600: $A7
    jr nz, jr_004_5642                            ; $5601: $20 $3F

    ld a, $93                                     ; $5603: $3E $93
    ld [$9C29], a                                 ; $5605: $EA $29 $9C
    ld [$9C2A], a                                 ; $5608: $EA $2A $9C
    ld [$9D69], a                                 ; $560B: $EA $69 $9D
    ld [$9D6A], a                                 ; $560E: $EA $6A $9D
    xor a                                         ; $5611: $AF
    ld [rVBK], a                                 ; $5612: $EA $4F $FF
    ld a, $94                                     ; $5615: $3E $94
    ld hl, $9C43                                  ; $5617: $21 $43 $9C
    call Call_004_54BA                            ; $561A: $CD $BA $54
    ld a, $B2                                     ; $561D: $3E $B2
    ld hl, $9CA3                                  ; $561F: $21 $A3 $9C
    call Call_004_54BA                            ; $5622: $CD $BA $54
    ld a, $D0                                     ; $5625: $3E $D0
    ld hl, $9D03                                  ; $5627: $21 $03 $9D
    call Call_004_54BA                            ; $562A: $CD $BA $54
    ld a, $92                                     ; $562D: $3E $92
    ld [$9C42], a                                 ; $562F: $EA $42 $9C
    ld a, $90                                     ; $5632: $3E $90
    ld [$9C4F], a                                 ; $5634: $EA $4F $9C
    ld [$9DAF], a                                 ; $5637: $EA $AF $9D
    ld a, $91                                     ; $563A: $3E $91
    ld [$9C6F], a                                 ; $563C: $EA $6F $9C
    ld [$9DCF], a                                 ; $563F: $EA $CF $9D

jr_004_5642:
    ld a, $01                                     ; $5642: $3E $01
    ld [rVBK], a                                 ; $5644: $EA $4F $FF
    ld d, $0F                                     ; $5647: $16 $0F
    ld bc, $0234                                  ; $5649: $01 $34 $02

jr_004_564C:
    ld hl, $9BFF                                  ; $564C: $21 $FF $9B
    add hl, bc                                    ; $564F: $09
    ld [hl], d                                    ; $5650: $72
    Dec16Loop bc, jr_004_564C                            ; $5654: $20 $F6

    ld a, $4F                                     ; $5656: $3E $4F
    ld d, $12                                     ; $5658: $16 $12
    ld hl, $9E21                                  ; $565A: $21 $21 $9E

jr_004_565D:
    ld [hl+], a                                   ; $565D: $22
    dec d                                         ; $565E: $15
    jr nz, jr_004_565D                            ; $565F: $20 $FC

    ld bc, $0010                                  ; $5661: $01 $10 $00

jr_004_5664:
    ld hl, $9C00                                  ; $5664: $21 $00 $9C
    push bc                                       ; $5667: $C5
    Sla16 bc, 5

    add hl, bc                                    ; $5671: $09
    ld a, $2F                                     ; $5672: $3E $2F
    ld [hl+], a                                   ; $5674: $22
    pop bc                                        ; $5675: $C1
    dec c                                         ; $5676: $0D
    jr nz, jr_004_5664                            ; $5677: $20 $EB

    ld a, $2F                                     ; $5679: $3E $2F
    ld [$9C00], a                                 ; $567B: $EA $00 $9C
    ld [$9C2A], a                                 ; $567E: $EA $2A $9C
    ld [$9DA0], a                                 ; $5681: $EA $A0 $9D
    ld a, $4F                                     ; $5684: $3E $4F
    ld [$9E33], a                                 ; $5686: $EA $33 $9E
    ld [$9D69], a                                 ; $5689: $EA $69 $9D
    ld a, $6F                                     ; $568C: $3E $6F
    ld [$9E20], a                                 ; $568E: $EA $20 $9E
    ld [$9D6A], a                                 ; $5691: $EA $6A $9D
    xor a                                         ; $5694: $AF
    ld [wTextbox_WY], a                                 ; $5695: $EA $F1 $C6
    ld a, $07                                     ; $5698: $3E $07
    ld [wTextbox_WX], a                                 ; $569A: $EA $F0 $C6
    ret                                           ; $569D: $C9


Call_004_569E:
    xor a                                         ; $569E: $AF
    ld [rVBK], a                                 ; $569F: $EA $4F $FF
    ld a, $80                                     ; $56A2: $3E $80
    ld [$9C42], a                                 ; $56A4: $EA $42 $9C
    ld [$9C4F], a                                 ; $56A7: $EA $4F $9C
    ld [$9C6F], a                                 ; $56AA: $EA $6F $9C
    ld [$9C8F], a                                 ; $56AD: $EA $8F $9C
    ld [$9CA2], a                                 ; $56B0: $EA $A2 $9C
    ld [$9CAF], a                                 ; $56B3: $EA $AF $9C
    ld [$9CCF], a                                 ; $56B6: $EA $CF $9C
    ld [$9CEF], a                                 ; $56B9: $EA $EF $9C
    ld [$9D02], a                                 ; $56BC: $EA $02 $9D
    ld [$9D0F], a                                 ; $56BF: $EA $0F $9D
    ld [$9D2F], a                                 ; $56C2: $EA $2F $9D
    ld [$9D4F], a                                 ; $56C5: $EA $4F $9D
    ld [$9DEF], a                                 ; $56C8: $EA $EF $9D
    ld [$9C29], a                                 ; $56CB: $EA $29 $9C
    ld [$9C2A], a                                 ; $56CE: $EA $2A $9C
    ld [$9D69], a                                 ; $56D1: $EA $69 $9D
    ld [$9D6A], a                                 ; $56D4: $EA $6A $9D
    ld a, [$CC4D]                                 ; $56D7: $FA $4D $CC
    and a                                         ; $56DA: $A7
    jr z, jr_004_56E4                             ; $56DB: $28 $07

    ld a, $93                                     ; $56DD: $3E $93
    ld hl, $9C29                                  ; $56DF: $21 $29 $9C
    ld [hl+], a                                   ; $56E2: $22
    ld [hl+], a                                   ; $56E3: $22

jr_004_56E4:
    ld a, [$CC51]                                 ; $56E4: $FA $51 $CC
    and a                                         ; $56E7: $A7
    jr z, jr_004_56F1                             ; $56E8: $28 $07

    ld a, $93                                     ; $56EA: $3E $93
    ld hl, $9D69                                  ; $56EC: $21 $69 $9D
    ld [hl+], a                                   ; $56EF: $22
    ld [hl+], a                                   ; $56F0: $22

jr_004_56F1:
    xor a                                         ; $56F1: $AF
    ld [$CC89], a                                 ; $56F2: $EA $89 $CC
    ld bc, $0000                                  ; $56F5: $01 $00 $00
    FSet16 $CD3C, bc                                    ; $56FD: $70
    FSet16 $CD3E, bc                                    ; $5703: $70

Jump_004_5704:
    ld a, [$CC89]                                 ; $5704: $FA $89 $CC
    ld b, a                                       ; $5707: $47
    ld c, $08                                     ; $5708: $0E $08
    call Math_Mult                                    ; $570A: $CD $CA $04
    ld bc, $CD22                                  ; $570D: $01 $22 $CD
    add hl, bc                                    ; $5710: $09
    push hl                                       ; $5711: $E5
    ld bc, $01E0                                  ; $5712: $01 $E0 $01
    ld hl, $0060                                  ; $5715: $21 $60 $00
    ld a, [$CC89]                                 ; $5718: $FA $89 $CC
    and a                                         ; $571B: $A7
    jr z, jr_004_5742                             ; $571C: $28 $24

    cp $01                                        ; $571E: $FE $01
    jr z, jr_004_5734                             ; $5720: $28 $12
    Sla16 bc, 1
    Sla16 hl, 1

jr_004_5734:
    ld a, h                                       ; $5734: $7C
    ld [$CD3D], a                                 ; $5735: $EA $3D $CD
    ld a, l                                       ; $5738: $7D
    ld [$CD3C], a                                 ; $5739: $EA $3C $CD
    FSet16 $CD3E, bc                                    ; $5741: $70

jr_004_5742:
    ld bc, $8940                                  ; $5742: $01 $40 $89
    FGet16 hl, $CD3E                                  ; $5745: $21 $3E $CD
    add hl, bc                                    ; $574B: $09
    ld a, h                                       ; $574C: $7C
    ld [$CC46], a                                 ; $574D: $EA $46 $CC
    ld a, l                                       ; $5750: $7D
    ld [wMenu_MainMenu_StringToTileset_Dest], a                                 ; $5751: $EA $45 $CC
    pop hl                                        ; $5754: $E1
    push hl                                       ; $5755: $E5
    call Call_004_554E                            ; $5756: $CD $4E $55
    ld a, [wMenu_Battle_TableRowBuffer]                                 ; $5759: $FA $91 $CD
    cp $20                                        ; $575C: $FE $20
    jr z, jr_004_5771                             ; $575E: $28 $11

    xor a                                         ; $5760: $AF
    ld [rVBK], a                                 ; $5761: $EA $4F $FF
    FGet16 bc, $CD3C                                  ; $5764: $21 $3C $CD                                       ; $5769: $4F
    ld hl, $9C42                                  ; $576A: $21 $42 $9C
    add hl, bc                                    ; $576D: $09
    ld a, $92                                     ; $576E: $3E $92
    ld [hl], a                                    ; $5770: $77

jr_004_5771:
    pop hl                                        ; $5771: $E1
    inc hl                                        ; $5772: $23
    push hl                                       ; $5773: $E5
    ld bc, $89E0                                  ; $5774: $01 $E0 $89
    FGet16 hl, $CD3E                                  ; $5777: $21 $3E $CD
    add hl, bc                                    ; $577D: $09
    ld a, h                                       ; $577E: $7C
    ld [$CC46], a                                 ; $577F: $EA $46 $CC
    ld a, l                                       ; $5782: $7D
    ld [wMenu_MainMenu_StringToTileset_Dest], a                                 ; $5783: $EA $45 $CC
    pop hl                                        ; $5786: $E1
    push hl                                       ; $5787: $E5
    call Call_004_554E                            ; $5788: $CD $4E $55
    pop hl                                        ; $578B: $E1
    inc hl                                        ; $578C: $23
    push hl                                       ; $578D: $E5
    ld de, $9C70                                  ; $578E: $11 $70 $9C
    FGet16 hl, $CD3C                                  ; $5791: $21 $3C $CD
    add hl, de                                    ; $5797: $19
    ld d, h                                       ; $5798: $54
    ld e, l                                       ; $5799: $5D
    pop hl                                        ; $579A: $E1
    push hl                                       ; $579B: $E5
    xor a                                         ; $579C: $AF
    call Call_004_551A                            ; $579D: $CD $1A $55
    cp $80                                        ; $57A0: $FE $80
    jr z, jr_004_57B5                             ; $57A2: $28 $11

    xor a                                         ; $57A4: $AF
    ld [rVBK], a                                 ; $57A5: $EA $4F $FF
    FGet16 bc, $CD3C                                  ; $57A8: $21 $3C $CD                                       ; $57AD: $4F
    ld hl, $9C6F                                  ; $57AE: $21 $6F $9C
    add hl, bc                                    ; $57B1: $09
    ld a, $91                                     ; $57B2: $3E $91
    ld [hl], a                                    ; $57B4: $77

jr_004_57B5:
    pop hl                                        ; $57B5: $E1
    inc hl                                        ; $57B6: $23
    push hl                                       ; $57B7: $E5
    ld bc, $8A80                                  ; $57B8: $01 $80 $8A
    FGet16 hl, $CD3E                                  ; $57BB: $21 $3E $CD
    add hl, bc                                    ; $57C1: $09
    ld a, h                                       ; $57C2: $7C
    ld [$CC46], a                                 ; $57C3: $EA $46 $CC
    ld a, l                                       ; $57C6: $7D
    ld [wMenu_MainMenu_StringToTileset_Dest], a                                 ; $57C7: $EA $45 $CC
    pop hl                                        ; $57CA: $E1
    push hl                                       ; $57CB: $E5
    call Call_004_554E                            ; $57CC: $CD $4E $55
    pop hl                                        ; $57CF: $E1
    inc hl                                        ; $57D0: $23
    push hl                                       ; $57D1: $E5
    ld de, $9C90                                  ; $57D2: $11 $90 $9C
    FGet16 hl, $CD3C                                  ; $57D5: $21 $3C $CD
    add hl, de                                    ; $57DB: $19
    ld d, h                                       ; $57DC: $54
    ld e, l                                       ; $57DD: $5D
    pop hl                                        ; $57DE: $E1
    push hl                                       ; $57DF: $E5
    xor a                                         ; $57E0: $AF
    call Call_004_551A                            ; $57E1: $CD $1A $55
    cp $80                                        ; $57E4: $FE $80
    jr z, jr_004_57F9                             ; $57E6: $28 $11

    xor a                                         ; $57E8: $AF
    ld [rVBK], a                                 ; $57E9: $EA $4F $FF
    FGet16 bc, $CD3C                                  ; $57EC: $21 $3C $CD                                       ; $57F1: $4F
    ld hl, $9C8F                                  ; $57F2: $21 $8F $9C
    add hl, bc                                    ; $57F5: $09
    ld a, $91                                     ; $57F6: $3E $91
    ld [hl], a                                    ; $57F8: $77

jr_004_57F9:
    ld de, $9C50                                  ; $57F9: $11 $50 $9C
    FGet16 hl, $CD3C                                  ; $57FC: $21 $3C $CD
    add hl, de                                    ; $5802: $19
    ld d, h                                       ; $5803: $54
    ld e, l                                       ; $5804: $5D
    pop hl                                        ; $5805: $E1
    inc hl                                        ; $5806: $23
    ld a, $01                                     ; $5807: $3E $01
    call Call_004_551A                            ; $5809: $CD $1A $55
    cp $80                                        ; $580C: $FE $80
    jr z, jr_004_5821                             ; $580E: $28 $11

    xor a                                         ; $5810: $AF
    ld [rVBK], a                                 ; $5811: $EA $4F $FF
    FGet16 bc, $CD3C                                  ; $5814: $21 $3C $CD                                       ; $5819: $4F
    ld hl, $9C4F                                  ; $581A: $21 $4F $9C
    add hl, bc                                    ; $581D: $09
    ld a, $90                                     ; $581E: $3E $90
    ld [hl], a                                    ; $5820: $77

jr_004_5821:
    ld hl, $CC89                                  ; $5821: $21 $89 $CC
    inc [hl]                                      ; $5824: $34
    ld a, $03                                     ; $5825: $3E $03
    cp [hl]                                       ; $5827: $BE
    ret z                                         ; $5828: $C8

    jp Jump_004_5704                              ; $5829: $C3 $04 $57


Jump_004_582C:
jr_004_582C:
    Do_CallForeign Menu_GoClobber
    call System_UpdateGameNoScript                                    ; $5834: $CD $5F $09
    ld a, [wMenu_CursorID]                                 ; $5837: $FA $81 $CD
    ld b, a                                       ; $583A: $47
    ld a, [$CD3B]                                 ; $583B: $FA $3B $CD
    cp b                                          ; $583E: $B8
    jr z, jr_004_5844                             ; $583F: $28 $03

    call Call_004_6034                            ; $5841: $CD $34 $60

jr_004_5844:
    ld a, [wMenu_ReturnValue]                                 ; $5844: $FA $A7 $CC
    cp $FF                                        ; $5847: $FE $FF
    jr z, jr_004_582C                             ; $5849: $28 $E1

    ld [$CD55], a                                 ; $584B: $EA $55 $CD
    and a                                         ; $584E: $A7
    jr nz, jr_004_58A7                            ; $584F: $20 $56

jr_004_5851:
    call ScreenHide                                    ; $5851: $CD $C3 $07
    call Call_004_5F1A                            ; $5854: $CD $1A $5F
    call Call_004_569E                            ; $5857: $CD $9E $56

    Do_Menu_Init Menu_CursorTable_Forge, %11110011, wMenu_MainMenu_CursorTableValidIDs, MenuFunc_Flash, MenuFunc_Flash, Creatur0, Menu_CURSOR_NOBLINK, Menu_CURSOR_SPRITE

    call ScreenShow                                    ; $58A1: $CD $EA $07
    jp Jump_004_582C                              ; $58A4: $C3 $2C $58


jr_004_58A7:
    cp $04                                        ; $58A7: $FE $04
    jr z, jr_004_5851                             ; $58A9: $28 $A6

    cp $FE                                        ; $58AB: $FE $FE
    jr nz, jr_004_58B2                            ; $58AD: $20 $03

    jp Jump_004_54D8                              ; $58AF: $C3 $D8 $54


jr_004_58B2:
    call Call_004_5A5B                            ; $58B2: $CD $5B $5A
    ld a, [$CD49]                                 ; $58B5: $FA $49 $CD
    and a                                         ; $58B8: $A7
    jp nz, Jump_004_54D8                          ; $58B9: $C2 $D8 $54

    ld a, $04                                     ; $58BC: $3E $04
    ld [wVBlank_Bank], a                                 ; $58BE: $EA $E6 $C6
    ld a, $60                                     ; $58C1: $3E $60
    ld [wVBlank_Func], a                                 ; $58C3: $EA $E4 $C6
    ld a, $61                                     ; $58C6: $3E $61
    ld [wVBlank_Func+1], a                                 ; $58C8: $EA $E5 $C6
    call System_UpdateGameNoScript                                    ; $58CB: $CD $5F $09
    ld a, $8B                                     ; $58CE: $3E $8B
    ld [wVBlank_Func], a                                 ; $58D0: $EA $E4 $C6
    ld a, $61                                     ; $58D3: $3E $61
    ld [wVBlank_Func+1], a                                 ; $58D5: $EA $E5 $C6
    call System_UpdateGameNoScript                                    ; $58D8: $CD $5F $09


    Do_Menu_Init Menu_CursorTable_Forge, %11110011, wMenu_MainMenu_CursorTableValidIDs, MenuFunc_Flash, MenuFunc_Flash, [$CD55], Menu_CURSOR_NOBLINK, Menu_CURSOR_SPRITE
    ; TODO clarify [CD55]

    jp Jump_004_582C                              ; $5923: $C3 $2C $58

Call_004_5926::
    Frame_Init
    call ScreenHide                                    ; $5931: $CD $C3 $07
    ld a, $FF                                     ; $5934: $3E $FF
    ld [$C726], a                                 ; $5936: $EA $26 $C7
    xor a                                         ; $5939: $AF
    ld [rWY], a                                 ; $593A: $EA $4A $FF
    ld a, $07                                     ; $593D: $3E $07
    ld [rWX], a                                 ; $593F: $EA $4B $FF
    Do_CallForeign Menu_MainMenu_BackupVRAMObjectsChars
    Do_CallForeign Cardscene_BackupBackgroundCharsBC
    ld bc, $5275                                  ; $5952: $01 $75 $52
    FSet16 wMenu_MainMenu_StringToTileset_Source, bc                                    ; $595A: $70
    ld bc, $8860                                  ; $595B: $01 $60 $88
    FSet16 wMenu_MainMenu_StringToTileset_Dest, bc                                    ; $5963: $70
    ld a, $0A                                     ; $5964: $3E $0A
    ld [wMenu_MainMenu_StringToTileset_Length], a                                 ; $5966: $EA $42 $CC
    Do_CallForeign Menu_MainMenu_StringToTileset
    ld a, $01                                     ; $5971: $3E $01
    ld [wVBlank_DestVBK], a                                 ; $5973: $EA $EB $C6
    ld bc, $4120                                  ; $5976: $01 $20 $41
    FSet16 wVBlank_SourceAddress, bc                                    ; $597E: $70
    ld bc, $8900                                  ; $597F: $01 $00 $89
    FSet16 wVBlank_DestAddress, bc                                    ; $5987: $70
    ld e, $06                                     ; $5988: $1E $06
    ld hl, Interrupt_VBlankFunc_CopyTile                                  ; $598A: $21 $49 $29
    call CallForeign                                    ; $598D: $CD $73 $07
    ld bc, $4110                                  ; $5990: $01 $10 $41
    FSet16 wVBlank_SourceAddress, bc                                    ; $5998: $70
    ld hl, Interrupt_VBlankFunc_CopyTile                                  ; $5999: $21 $49 $29
    call CallForeign                                    ; $599C: $CD $73 $07
    ld bc, $4100                                  ; $599F: $01 $00 $41
    FSet16 wVBlank_SourceAddress, bc                                    ; $59A7: $70
    ld hl, Interrupt_VBlankFunc_CopyTile                                  ; $59A8: $21 $49 $29
    call CallForeign                                    ; $59AB: $CD $73 $07
    ld bc, $41D0                                  ; $59AE: $01 $D0 $41
    FSet16 wVBlank_SourceAddress, bc                                    ; $59B6: $70
    ld hl, Interrupt_VBlankFunc_CopyTile                                  ; $59B7: $21 $49 $29
    call CallForeign                                    ; $59BA: $CD $73 $07

Jump_004_59BD:
    SwitchRAMBank $06
    ld a, [$D000]                                 ; $59C4: $FA $00 $D0
    dec a                                         ; $59C7: $3D
    ld [$CD20], a                                 ; $59C8: $EA $20 $CD
    xor a                                         ; $59CB: $AF
    ld [$CD3B], a                                 ; $59CC: $EA $3B $CD
    ld [$CD49], a                                 ; $59CF: $EA $49 $CD
    ld [$CD54], a                                 ; $59D2: $EA $54 $CD
    ld hl, $CC4D                                  ; $59D5: $21 $4D $CC
    ld [hl+], a                                   ; $59D8: $22
    ld a, $01                                     ; $59D9: $3E $01
    ld [hl+], a                                   ; $59DB: $22
    ld [hl+], a                                   ; $59DC: $22
    ld [hl+], a                                   ; $59DD: $22
    ld [hl+], a                                   ; $59DE: $22
    ld [hl+], a                                   ; $59DF: $22


    Do_Menu_Init Menu_CursorTable_Forge, %11110011, wMenu_MainMenu_CursorTableValidIDs, MenuFunc_Flash, MenuFunc_Flash, Creatur0, Menu_CURSOR_NOBLINK, Menu_CURSOR_SPRITE

    call Call_004_557A                            ; $5A27: $CD $7A $55
    call Call_004_5F1A                            ; $5A2A: $CD $1A $5F
    call Call_004_569E                            ; $5A2D: $CD $9E $56
    Battery_SetBank "XRAM Gamestate"
    Battery_On
    ld a, $01                                     ; $5A3D: $3E $01
    ld hl, $A3A5                                  ; $5A3F: $21 $A5 $A3
    ld de, $9DB0                                  ; $5A42: $11 $B0 $9D
    call Call_004_551A                            ; $5A45: $CD $1A $55
    Battery_Off
    call ScreenShow                                    ; $5A4C: $CD $EA $07
    jp Jump_004_582C                              ; $5A4F: $C3 $2C $58


    call System_UpdateGameNoScript                                    ; $5A52: $CD $5F $09
    call ScreenHide                                    ; $5A55: $CD $C3 $07
    jp Jump_004_59BD                              ; $5A58: $C3 $BD $59


Call_004_5A5B:
    ld a, $04                                     ; $5A5B: $3E $04
    ld [wVBlank_Bank], a                                 ; $5A5D: $EA $E6 $C6
    ld a, $60                                     ; $5A60: $3E $60
    ld [wVBlank_Func], a                                 ; $5A62: $EA $E4 $C6
    ld a, $61                                     ; $5A65: $3E $61
    ld [wVBlank_Func+1], a                                 ; $5A67: $EA $E5 $C6
    call System_UpdateGameNoScript                                    ; $5A6A: $CD $5F $09
    ld bc, $FFFF                                  ; $5A6D: $01 $FF $FF
    FSet16 $CD4E, bc                                    ; $5A75: $70
    ld a, [wMenu_CursorID]                                 ; $5A76: $FA $81 $CD
    dec a                                         ; $5A79: $3D
    ld b, a                                       ; $5A7A: $47
    ld c, $08                                     ; $5A7B: $0E $08
    call Math_Mult                                    ; $5A7D: $CD $CA $04
    ld bc, $CD22                                  ; $5A80: $01 $22 $CD
    add hl, bc                                    ; $5A83: $09
    push hl                                       ; $5A84: $E5
    ld bc, $0005                                  ; $5A85: $01 $05 $00
    add hl, bc                                    ; $5A88: $09
    DerefHL
    ld b, h                                       ; $5A8C: $44
    ld c, l                                       ; $5A8D: $4D
    TwosComp bc
    Battery_SetBank "XRAM Gamestate"
    Battery_On
    FGet16 hl, $A3A5                                  ; $5AA2: $21 $A5 $A3
    Battery_Off
    add hl, bc                                    ; $5AAC: $09
    ld a, h                                       ; $5AAD: $7C
    ld [$CD4B], a                                 ; $5AAE: $EA $4B $CD
    ld a, l                                       ; $5AB1: $7D
    ld [$CD4A], a                                 ; $5AB2: $EA $4A $CD
    pop hl                                        ; $5AB5: $E1
    jp nc, Jump_004_5DF5                          ; $5AB6: $D2 $F5 $5D

    push hl                                       ; $5AB9: $E5
    ld bc, $0002                                  ; $5ABA: $01 $02 $00
    add hl, bc                                    ; $5ABD: $09
    ld e, [hl]                                    ; $5ABE: $5E
    ld d, $00                                     ; $5ABF: $16 $00
    TwosComp de
    pop hl                                        ; $5AC8: $E1
    push hl                                       ; $5AC9: $E5
    ld bc, $0001                                  ; $5ACA: $01 $01 $00
    add hl, bc                                    ; $5ACD: $09
    ld a, [hl]                                    ; $5ACE: $7E
    ld [$CD4C], a                                 ; $5ACF: $EA $4C $CD
    ld c, a                                       ; $5AD2: $4F
    ld b, $00                                     ; $5AD3: $06 $00
    ld hl, $A4A6                                  ; $5AD5: $21 $A6 $A4
    add hl, bc                                    ; $5AD8: $09
    Battery_SetBank "XRAM Gamestate"
    Battery_On
    ld l, [hl]                                    ; $5AE6: $6E
    ld h, $00                                     ; $5AE7: $26 $00
    Battery_Off
    add hl, de                                    ; $5AED: $19
    ld a, l                                       ; $5AEE: $7D
    ld [$CD4D], a                                 ; $5AEF: $EA $4D $CD
    pop hl                                        ; $5AF2: $E1
    jp nc, Jump_004_5DF5                          ; $5AF3: $D2 $F5 $5D

    push hl                                       ; $5AF6: $E5
    ld bc, $0004                                  ; $5AF7: $01 $04 $00
    add hl, bc                                    ; $5AFA: $09
    ld e, [hl]                                    ; $5AFB: $5E
    xor a                                         ; $5AFC: $AF
    cp e                                          ; $5AFD: $BB
    jr z, jr_004_5B38                             ; $5AFE: $28 $38

    ld d, $00                                     ; $5B00: $16 $00
    TwosComp de
    pop hl                                        ; $5B09: $E1
    push hl                                       ; $5B0A: $E5
    ld bc, $0003                                  ; $5B0B: $01 $03 $00
    add hl, bc                                    ; $5B0E: $09
    ld a, [hl]                                    ; $5B0F: $7E
    ld [$CD4E], a                                 ; $5B10: $EA $4E $CD
    ld c, a                                       ; $5B13: $4F
    ld b, $00                                     ; $5B14: $06 $00
    ld hl, $A4A6                                  ; $5B16: $21 $A6 $A4
    add hl, bc                                    ; $5B19: $09
    Battery_SetBank "XRAM Gamestate"
    Battery_On
    ld l, [hl]                                    ; $5B27: $6E
    ld h, $00                                     ; $5B28: $26 $00
    Battery_Off
    add hl, de                                    ; $5B2E: $19
    ld a, l                                       ; $5B2F: $7D
    ld [$CD4F], a                                 ; $5B30: $EA $4F $CD
    pop hl                                        ; $5B33: $E1
    jp nc, Jump_004_5DF5                          ; $5B34: $D2 $F5 $5D

    push hl                                       ; $5B37: $E5

jr_004_5B38:
    ; String is in bank 3 - to document
    Menu_TextSetup $01, $8EE0, $9DA1, .End, sShallIMake
    Do_CallForeign Call_003_4260
    Menu_TextSetup $01, $8FA0, $9DE1, .End, sThisRing
    Do_CallForeign Call_003_4260
    Menu_TextSetup $01, $9040, $9E02, .End, sYes__No
    Do_CallForeign Call_003_4260
    ld hl, $CC52                                  ; $5C4F: $21 $52 $CC
    ld a, $01                                     ; $5C52: $3E $01
    ld [hl+], a                                   ; $5C54: $22
    ld [hl+], a                                   ; $5C55: $22


    Do_Menu_Init Menu_CursorTable_Forge, %11110011, wMenu_MainMenu_CursorTableValidIDs, MenuFunc_Flash, MenuFunc_Flash, Yes, Menu_CURSOR_NOBLINK, Menu_CURSOR_SPRITE


jr_004_5C9D:
    Do_CallForeign Menu_Do
    call System_UpdateGameNoScript                                    ; $5CA5: $CD $5F $09
    ld a, [wMenu_ReturnValue]                                 ; $5CA8: $FA $A7 $CC
    cp $FF                                        ; $5CAB: $FE $FF
    jr z, jr_004_5C9D                             ; $5CAD: $28 $EE

    pop hl                                        ; $5CAF: $E1
    cp $05                                        ; $5CB0: $FE $05
    ret nz                                        ; $5CB2: $C0

    ld a, $01                                     ; $5CB3: $3E $01
    ld [$CD49], a                                 ; $5CB5: $EA $49 $CD
    ld a, [hl]                                    ; $5CB8: $7E
    ld [wBattle_CopyBuffer_ListIndex], a                                 ; $5CB9: $EA $8C $CD
    ld [$CD51], a                                 ; $5CBC: $EA $51 $CD
    ld bc, wText_StringBuffer                                  ; $5CBF: $01 $49 $C9
    FSet16 wBattle_CopyBuffer_Destination, bc                                    ; $5CC7: $70
    Do_CallForeign CreatureName_CopyToDest
    ld hl, $C953                                  ; $5CD0: $21 $53 $C9
    ld a, $FC                                     ; $5CD3: $3E $FC
    ld [hl], a                                    ; $5CD5: $77
    ld a, $49                                     ; $5CD6: $3E $49
    ld [wText_StringFormatFrame], a                                 ; $5CD8: $EA $3D $C9
    ld a, $C9                                     ; $5CDB: $3E $C9
    ld [wText_StringFormatFrame+1], a                                 ; $5CDD: $EA $3E $C9
    Battery_SetBank "XRAM Gamestate"
    Battery_On
    FGet16 bc, $CD4A                                  ; $5CED: $21 $4A $CD                                       ; $5CF2: $4F
    FSet16 $A3A5, bc                                    ; $5CF8: $70
    ld a, [$CD4C]                                 ; $5CF9: $FA $4C $CD
    ld c, a                                       ; $5CFC: $4F
    ld b, $00                                     ; $5CFD: $06 $00
    ld hl, $A4A6                                  ; $5CFF: $21 $A6 $A4
    add hl, bc                                    ; $5D02: $09
    ld a, [$CD4D]                                 ; $5D03: $FA $4D $CD
    ld [hl], a                                    ; $5D06: $77
    ld a, [$CD4E]                                 ; $5D07: $FA $4E $CD
    cp $FF                                        ; $5D0A: $FE $FF
    jr z, jr_004_5D19                             ; $5D0C: $28 $0B

    ld c, a                                       ; $5D0E: $4F
    ld b, $00                                     ; $5D0F: $06 $00
    ld hl, $A4A6                                  ; $5D11: $21 $A6 $A4
    add hl, bc                                    ; $5D14: $09
    ld a, [$CD4F]                                 ; $5D15: $FA $4F $CD
    ld [hl], a                                    ; $5D18: $77

Call_004_5D19::
jr_004_5D19:
    Battery_SetBank "XRAM Gamestate"
    Battery_On
    ld hl, $A122                                  ; $5D26: $21 $22 $A1
    inc [hl]                                      ; $5D29: $34
    Battery_Off
    ld a, [$CD51]                                 ; $5D2E: $FA $51 $CD
    ld [$C726], a                                 ; $5D31: $EA $26 $C7
    ld b, a                                       ; $5D34: $47
    ld c, Creature_Table_SIZE                                     ; $5D35: $0E $2D
    call Math_Mult                                    ; $5D37: $CD $CA $04
    ld bc, Creature_Table                                  ; $5D3A: $01 $5B $41
    add hl, bc                                    ; $5D3D: $09
    ld a, h                                       ; $5D3E: $7C
    ld [wBattle_CopyBuffer_Source + 1], a                                 ; $5D3F: $EA $8E $CD
    ld a, l                                       ; $5D42: $7D
    ld [wBattle_CopyBuffer_Source], a                                 ; $5D43: $EA $8D $CD
    ld bc, wMenu_Battle_TableRowBuffer                                  ; $5D46: $01 $91 $CD
    FSet16 wBattle_CopyBuffer_Destination, bc                                    ; $5D4E: $70
    Do_CallForeign Creature_Table_CopyStatsToBuffer
    ld hl, $A025                                  ; $5D57: $21 $25 $A0
    ld bc, $0025                                  ; $5D5A: $01 $25 $00
    ld d, $00                                     ; $5D5D: $16 $00
    Battery_SetBank "XRAM Creatures"
    Battery_On

jr_004_5D6C:
    ld a, [hl]                                    ; $5D6C: $7E
    cp $FF                                        ; $5D6D: $FE $FF
    jr z, jr_004_5D75                             ; $5D6F: $28 $04

    add hl, bc                                    ; $5D71: $09
    inc d                                         ; $5D72: $14
    jr jr_004_5D6C                                ; $5D73: $18 $F7

jr_004_5D75:
    ld a, d                                       ; $5D75: $7A
    ld [$CD56], a                                 ; $5D76: $EA $56 $CD
    ld a, h                                       ; $5D79: $7C
    ld [$CD53], a                                 ; $5D7A: $EA $53 $CD
    ld a, l                                       ; $5D7D: $7D
    ld [$CD52], a                                 ; $5D7E: $EA $52 $CD
    ld bc, wMenu_Battle_TableRowBuffer                                  ; $5D81: $01 $91 $CD
    ld a, [$CD51]                                 ; $5D84: $FA $51 $CD
    ld [hl+], a                                   ; $5D87: $22
    LdHLIBCI                                        ; $5D8A: $03
    ld a, $01                                     ; $5D8B: $3E $01
    ld [hl+], a                                   ; $5D8D: $22
    xor a                                         ; $5D8E: $AF
    ld [hl+], a                                   ; $5D8F: $22
    ld [hl+], a                                   ; $5D90: $22
    ld [hl+], a                                   ; $5D91: $22
    ld [hl+], a                                   ; $5D92: $22
    ld [hl+], a                                   ; $5D93: $22
    LdHLIBCI                                        ; $5D96: $03
    inc bc                                        ; $5D97: $03
    inc bc                                        ; $5D98: $03
    ld d, $0A                                     ; $5D99: $16 $0A

jr_004_5D9B:
    LdHLIBCI                                        ; $5D9D: $03
    dec d                                         ; $5D9E: $15
    jr nz, jr_004_5D9B                            ; $5D9F: $20 $FA

    xor a                                         ; $5DA1: $AF
    ld [hl+], a                                   ; $5DA2: $22
    LdHLIBCI                                        ; $5DA5: $03
    LdHLIBCI                                        ; $5DA8: $03
    inc bc                                        ; $5DA9: $03
    inc bc                                        ; $5DAA: $03
    ld d, $0C                                     ; $5DAB: $16 $0C

jr_004_5DAD:
    LdHLIBCI                                        ; $5DAF: $03
    dec d                                         ; $5DB0: $15
    jr nz, jr_004_5DAD                            ; $5DB1: $20 $FA

    xor a                                         ; $5DB3: $AF
    ld [hl+], a                                   ; $5DB4: $22
    ld [hl+], a                                   ; $5DB5: $22
    ld [hl+], a                                   ; $5DB6: $22
    Battery_Off
    PushRAMBank
    Do_CallForeign Call_002_5B35
    PopRAMBank
    ld hl, xInventory_Rings                                  ; $5DCE: $21 $18 $A1
    ld d, $0A                                     ; $5DD1: $16 $0A
    Battery_SetBank "XRAM Gamestate"
    Battery_On
    ld a, $FF                                     ; $5DE0: $3E $FF

jr_004_5DE2:
    cp [hl]                                       ; $5DE2: $BE
    jr z, jr_004_5DEB                             ; $5DE3: $28 $06

    inc hl                                        ; $5DE5: $23
    dec d                                         ; $5DE6: $15
    jr nz, jr_004_5DE2                            ; $5DE7: $20 $F9

    jr jr_004_5DF0                                ; $5DE9: $18 $05

jr_004_5DEB:
    ld a, [$CD56]                                 ; $5DEB: $FA $56 $CD
    inc a                                         ; $5DEE: $3C
    ld [hl], a                                    ; $5DEF: $77

jr_004_5DF0:
    Battery_Off
    ret                                           ; $5DF4: $C9


Jump_004_5DF5:
    ; String is in bank 3 - to document
    Menu_TextSetup $01, $8EE0, $9DA1, .End, sYouDoNot
    Do_CallForeign Call_003_4260
    Menu_TextSetup $01, $8F80, $9DC1, .End, sHaveEnough
    Do_CallForeign Call_003_4260
    Menu_TextSetup $01, $9030, $9DE1, .End, sAnimite
    Do_CallForeign Call_003_4260

jr_004_5F0C:
    call System_UpdateGameNoScript                                    ; $5F0C: $CD $5F $09
    ld a, [wCntDown]                                 ; $5F0F: $FA $32 $C9
    and $03                                       ; $5F12: $E6 $03
    jr z, jr_004_5F0C                             ; $5F14: $28 $F6

    call System_UpdateGameNoScript                                    ; $5F16: $CD $5F $09
    ret                                           ; $5F19: $C9


Call_004_5F1A:
    SwitchRAMBank $06
    ld a, [wMenu_CursorID]                                 ; $5F21: $FA $81 $CD
    cp $00                                        ; $5F24: $FE $00
    jr z, jr_004_5F35                             ; $5F26: $28 $0D

    cp $04                                        ; $5F28: $FE $04
    jr z, jr_004_5F74                             ; $5F2A: $28 $48

    xor a                                         ; $5F2C: $AF
    ld [$CD21], a                                 ; $5F2D: $EA $21 $CD
    ld [$CC89], a                                 ; $5F30: $EA $89 $CC
    jr jr_004_5F54                                ; $5F33: $18 $1F

jr_004_5F35:
    ld hl, $CD21                                  ; $5F35: $21 $21 $CD
    ld a, [hl]                                    ; $5F38: $7E
    sub $03                                       ; $5F39: $D6 $03
    ld [hl], a                                    ; $5F3B: $77
    ld [$CC89], a                                 ; $5F3C: $EA $89 $CC
    ld hl, $CC4D                                  ; $5F3F: $21 $4D $CC
    ld [hl+], a                                   ; $5F42: $22
    ld a, $01                                     ; $5F43: $3E $01
    ld [hl+], a                                   ; $5F45: $22
    ld [hl+], a                                   ; $5F46: $22
    ld [hl+], a                                   ; $5F47: $22
    ld a, [$CD21]                                 ; $5F48: $FA $21 $CD
    add $03                                       ; $5F4B: $C6 $03
    ld b, a                                       ; $5F4D: $47
    ld a, [$CD20]                                 ; $5F4E: $FA $20 $CD
    inc a                                         ; $5F51: $3C
    sub b                                         ; $5F52: $90
    ld [hl+], a                                   ; $5F53: $22

jr_004_5F54:
    ld a, $03                                     ; $5F54: $3E $03
    ld [$CD3A], a                                 ; $5F56: $EA $3A $CD
    ld a, [$CD21]                                 ; $5F59: $FA $21 $CD
    ld b, a                                       ; $5F5C: $47
    ld c, $08                                     ; $5F5D: $0E $08
    call Math_Mult                                    ; $5F5F: $CD $CA $04
    ld bc, $D001                                  ; $5F62: $01 $01 $D0
    add hl, bc                                    ; $5F65: $09
    ld bc, $CD22                                  ; $5F66: $01 $22 $CD
    ld d, $18                                     ; $5F69: $16 $18

jr_004_5F6B:
    LdBCIHLI                                        ; $5F6D: $03
    dec d                                         ; $5F6E: $15
    jr nz, jr_004_5F6B                            ; $5F6F: $20 $FA

    jp Jump_004_602B                              ; $5F71: $C3 $2B $60


jr_004_5F74:
    ld a, $01                                     ; $5F74: $3E $01
    ld hl, $CC4D                                  ; $5F76: $21 $4D $CC
    ld [hl+], a                                   ; $5F79: $22
    xor a                                         ; $5F7A: $AF
    inc hl                                        ; $5F7B: $23
    ld [hl+], a                                   ; $5F7C: $22
    ld [hl+], a                                   ; $5F7D: $22
    ld hl, $CD2A                                  ; $5F7E: $21 $2A $CD
    ld a, $FF                                     ; $5F81: $3E $FF
    ld [hl+], a                                   ; $5F83: $22
    ld [hl+], a                                   ; $5F84: $22
    xor a                                         ; $5F85: $AF
    ld [hl+], a                                   ; $5F86: $22
    ld a, $FF                                     ; $5F87: $3E $FF
    ld [hl+], a                                   ; $5F89: $22
    xor a                                         ; $5F8A: $AF
    ld [hl+], a                                   ; $5F8B: $22
    ld [hl+], a                                   ; $5F8C: $22
    ld [hl+], a                                   ; $5F8D: $22
    ld [hl+], a                                   ; $5F8E: $22
    ld a, $FF                                     ; $5F8F: $3E $FF
    ld [hl+], a                                   ; $5F91: $22
    ld [hl+], a                                   ; $5F92: $22
    xor a                                         ; $5F93: $AF
    ld [hl+], a                                   ; $5F94: $22
    ld a, $FF                                     ; $5F95: $3E $FF
    ld [hl+], a                                   ; $5F97: $22
    xor a                                         ; $5F98: $AF
    ld [hl+], a                                   ; $5F99: $22
    ld [hl+], a                                   ; $5F9A: $22
    ld [hl+], a                                   ; $5F9B: $22
    ld [hl+], a                                   ; $5F9C: $22
    ld a, $01                                     ; $5F9D: $3E $01
    ld [$CD3A], a                                 ; $5F9F: $EA $3A $CD
    ld a, [$CD21]                                 ; $5FA2: $FA $21 $CD
    add $03                                       ; $5FA5: $C6 $03
    ld [$CD21], a                                 ; $5FA7: $EA $21 $CD
    ld b, a                                       ; $5FAA: $47
    ld c, $08                                     ; $5FAB: $0E $08
    call Math_Mult                                    ; $5FAD: $CD $CA $04
    ld bc, $D001                                  ; $5FB0: $01 $01 $D0
    add hl, bc                                    ; $5FB3: $09
    ld bc, $CD22                                  ; $5FB4: $01 $22 $CD
    ld d, $08                                     ; $5FB7: $16 $08

jr_004_5FB9:
    LdBCIHLI                                        ; $5FBB: $03
    dec d                                         ; $5FBC: $15
    jr nz, jr_004_5FB9                            ; $5FBD: $20 $FA

    ld a, [$CD21]                                 ; $5FBF: $FA $21 $CD
    inc a                                         ; $5FC2: $3C
    ld b, a                                       ; $5FC3: $47
    ld a, [$CD20]                                 ; $5FC4: $FA $20 $CD
    cp b                                          ; $5FC7: $B8
    jr c, jr_004_6027                             ; $5FC8: $38 $5D

    ld hl, $CD3A                                  ; $5FCA: $21 $3A $CD
    inc [hl]                                      ; $5FCD: $34
    ld a, $01                                     ; $5FCE: $3E $01
    ld [$CC4F], a                                 ; $5FD0: $EA $4F $CC
    ld a, [$CD21]                                 ; $5FD3: $FA $21 $CD
    inc a                                         ; $5FD6: $3C
    ld b, a                                       ; $5FD7: $47
    ld c, $08                                     ; $5FD8: $0E $08
    call Math_Mult                                    ; $5FDA: $CD $CA $04
    ld bc, $D001                                  ; $5FDD: $01 $01 $D0
    add hl, bc                                    ; $5FE0: $09
    ld bc, $CD2A                                  ; $5FE1: $01 $2A $CD
    ld d, $08                                     ; $5FE4: $16 $08

jr_004_5FE6:
    LdBCIHLI                                        ; $5FE8: $03
    dec d                                         ; $5FE9: $15
    jr nz, jr_004_5FE6                            ; $5FEA: $20 $FA

    ld a, [$CD21]                                 ; $5FEC: $FA $21 $CD
    inc a                                         ; $5FEF: $3C
    inc a                                         ; $5FF0: $3C
    ld b, a                                       ; $5FF1: $47
    ld a, [$CD20]                                 ; $5FF2: $FA $20 $CD
    cp b                                          ; $5FF5: $B8
    jr c, jr_004_6027                             ; $5FF6: $38 $2F

    ld hl, $CD3A                                  ; $5FF8: $21 $3A $CD
    inc [hl]                                      ; $5FFB: $34
    ld a, $01                                     ; $5FFC: $3E $01
    ld [$CC50], a                                 ; $5FFE: $EA $50 $CC
    ld a, [$CD21]                                 ; $6001: $FA $21 $CD
    inc a                                         ; $6004: $3C
    inc a                                         ; $6005: $3C
    ld b, a                                       ; $6006: $47
    ld c, $08                                     ; $6007: $0E $08
    call Math_Mult                                    ; $6009: $CD $CA $04
    ld bc, $D001                                  ; $600C: $01 $01 $D0
    add hl, bc                                    ; $600F: $09
    ld bc, $CD32                                  ; $6010: $01 $32 $CD
    ld d, $08                                     ; $6013: $16 $08

jr_004_6015:
    LdBCIHLI                                        ; $6017: $03
    dec d                                         ; $6018: $15
    jr nz, jr_004_6015                            ; $6019: $20 $FA

    ld a, [$CD21]                                 ; $601B: $FA $21 $CD
    add $03                                       ; $601E: $C6 $03
    ld b, a                                       ; $6020: $47
    ld a, [$CD20]                                 ; $6021: $FA $20 $CD
    cp b                                          ; $6024: $B8
    jr nc, jr_004_602B                            ; $6025: $30 $04

jr_004_6027:
    xor a                                         ; $6027: $AF
    ld [$CC51], a                                 ; $6028: $EA $51 $CC

Jump_004_602B:
jr_004_602B:
    ld a, [$CD21]                                 ; $602B: $FA $21 $CD
    and a                                         ; $602E: $A7
    ret z                                         ; $602F: $C8

    ld [$CC4D], a                                 ; $6030: $EA $4D $CC
    ret                                           ; $6033: $C9


Call_004_6034:
    ld a, [wMenu_CursorID]                                 ; $6034: $FA $81 $CD
    ld [$CD3B], a                                 ; $6037: $EA $3B $CD
    cp $00                                        ; $603A: $FE $00
    ret z                                         ; $603C: $C8

    cp $04                                        ; $603D: $FE $04
    ret z                                         ; $603F: $C8

    ld a, $80                                     ; $6040: $3E $80
    ld d, $07                                     ; $6042: $16 $07
    ld hl, $CD40                                  ; $6044: $21 $40 $CD

jr_004_6047:
    ld [hl+], a                                   ; $6047: $22
    dec d                                         ; $6048: $15
    jr nz, jr_004_6047                            ; $6049: $20 $FC

    ld a, [wMenu_CursorID]                                 ; $604B: $FA $81 $CD
    dec a                                         ; $604E: $3D
    ld b, a                                       ; $604F: $47
    ld c, $08                                     ; $6050: $0E $08
    call Math_Mult                                    ; $6052: $CD $CA $04
    ld bc, $CD22                                  ; $6055: $01 $22 $CD
    add hl, bc                                    ; $6058: $09
    push hl                                       ; $6059: $E5
    ld bc, $0001                                  ; $605A: $01 $01 $00
    add hl, bc                                    ; $605D: $09
    ld c, [hl]                                    ; $605E: $4E
    ld b, $00                                     ; $605F: $06 $00
    ld hl, $A4A6                                  ; $6061: $21 $A6 $A4
    add hl, bc                                    ; $6064: $09
    Battery_SetBank "XRAM Gamestate"
    Battery_On
    xor a                                         ; $6072: $AF
    ld de, $CD40                                  ; $6073: $11 $40 $CD
    call Call_004_551A                            ; $6076: $CD $1A $55
    Battery_Off
    ld hl, $9C64                                  ; $607D: $21 $64 $9C
    ld bc, $0060                                  ; $6080: $01 $60 $00
    ld a, [wMenu_CursorID]                                 ; $6083: $FA $81 $CD

jr_004_6086:
    dec a                                         ; $6086: $3D
    jr z, jr_004_608C                             ; $6087: $28 $03

    add hl, bc                                    ; $6089: $09
    jr jr_004_6086                                ; $608A: $18 $FA

jr_004_608C:
    ld a, h                                       ; $608C: $7C
    ld [$CD48], a                                 ; $608D: $EA $48 $CD
    ld a, l                                       ; $6090: $7D
    ld [$CD47], a                                 ; $6091: $EA $47 $CD
    pop hl                                        ; $6094: $E1
    push hl                                       ; $6095: $E5
    ld bc, $0003                                  ; $6096: $01 $03 $00
    add hl, bc                                    ; $6099: $09
    ld c, [hl]                                    ; $609A: $4E
    ld a, $FF                                     ; $609B: $3E $FF
    cp c                                          ; $609D: $B9
    jr z, jr_004_60C3                             ; $609E: $28 $23

    ld b, $00                                     ; $60A0: $06 $00
    ld hl, $A4A6                                  ; $60A2: $21 $A6 $A4
    add hl, bc                                    ; $60A5: $09
    Battery_SetBank "XRAM Gamestate"
    Battery_On
    xor a                                         ; $60B3: $AF
    ld de, $CD44                                  ; $60B4: $11 $44 $CD
    call Call_004_551A                            ; $60B7: $CD $1A $55
    Battery_Off
    ld a, $91                                     ; $60BE: $3E $91
    ld [$CD43], a                                 ; $60C0: $EA $43 $CD

jr_004_60C3:
    pop hl                                        ; $60C3: $E1
    ld bc, $0007                                  ; $60C4: $01 $07 $00
    add hl, bc                                    ; $60C7: $09
    ld a, [hl]                                    ; $60C8: $7E
    ld [$CD50], a                                 ; $60C9: $EA $50 $CD
    ld a, $04                                     ; $60CC: $3E $04
    ld [wVBlank_Bank], a                                 ; $60CE: $EA $E6 $C6
    ld a, $DF                                     ; $60D1: $3E $DF
    ld [wVBlank_Func], a                                 ; $60D3: $EA $E4 $C6
    ld a, $60                                     ; $60D6: $3E $60
    ld [wVBlank_Func+1], a                                 ; $60D8: $EA $E5 $C6
    call System_UpdateGameNoScript                                    ; $60DB: $CD $5F $09
    ret                                           ; $60DE: $C9


    xor a                                         ; $60DF: $AF
    ld [rVBK], a                                 ; $60E0: $EA $4F $FF
    ld bc, $CD40                                  ; $60E3: $01 $40 $CD
    ld hl, $9DD0                                  ; $60E6: $21 $D0 $9D
    LdHLIBCI                                        ; $60EB: $03
    LdHLIBCI                                        ; $60EE: $03
    LdHLIBCI                                        ; $60F1: $03
    ld hl, $9DEF                                  ; $60F2: $21 $EF $9D
    LdHLIBCI                                        ; $60F7: $03
    LdHLIBCI                                        ; $60FA: $03
    LdHLIBCI                                        ; $60FD: $03
    LdHLIBCI                                        ; $6100: $03
    FGet16 bc, $CD47                                  ; $6101: $21 $47 $CD                                       ; $6106: $4F
    ld hl, $9DC4                                  ; $6107: $21 $C4 $9D
    LdHLIBCI                                        ; $610C: $03
    LdHLIBCI                                        ; $610F: $03
    LdHLIBCI                                        ; $6112: $03
    LdHLIBCI                                        ; $6115: $03
    LdHLIBCI                                        ; $6118: $03
    LdHLIBCI                                        ; $611B: $03
    LdHLIBCI                                        ; $611E: $03
    LdHLIBCI                                        ; $6121: $03
    LdHLIBCI                                        ; $6124: $03
    LdHLIBCI                                        ; $6127: $03
    FGet16 bc, $CD47                                  ; $6128: $21 $47 $CD                                       ; $612D: $4F
    ld hl, $0020                                  ; $612E: $21 $20 $00
    add hl, bc                                    ; $6131: $09
    ld b, h                                       ; $6132: $44
    ld c, l                                       ; $6133: $4D
    ld hl, $9DE4                                  ; $6134: $21 $E4 $9D
    LdHLIBCI                                        ; $6139: $03
    LdHLIBCI                                        ; $613C: $03
    LdHLIBCI                                        ; $613F: $03
    LdHLIBCI                                        ; $6142: $03
    LdHLIBCI                                        ; $6145: $03
    LdHLIBCI                                        ; $6148: $03
    LdHLIBCI                                        ; $614B: $03
    LdHLIBCI                                        ; $614E: $03
    LdHLIBCI                                        ; $6151: $03
    LdHLIBCI                                        ; $6154: $03
    Set16_M wVBlank_Func, Interrupt_VBlankFunc_Idle                                 ; $615C: $EA $E5 $C6
    ret                                           ; $615F: $C9


    xor a                                         ; $6160: $AF
    ld [rVBK], a                                 ; $6161: $EA $4F $FF
    ld a, $80                                     ; $6164: $3E $80
    ld hl, $9DC4                                  ; $6166: $21 $C4 $9D
    ld [hl+], a                                   ; $6169: $22
    ld [hl+], a                                   ; $616A: $22
    ld [hl+], a                                   ; $616B: $22
    ld [hl+], a                                   ; $616C: $22
    ld [hl+], a                                   ; $616D: $22
    ld [hl+], a                                   ; $616E: $22
    ld [hl+], a                                   ; $616F: $22
    ld [hl+], a                                   ; $6170: $22
    ld [hl+], a                                   ; $6171: $22
    ld [hl+], a                                   ; $6172: $22
    ld hl, $9DE4                                  ; $6173: $21 $E4 $9D
    ld [hl+], a                                   ; $6176: $22
    ld [hl+], a                                   ; $6177: $22
    ld [hl+], a                                   ; $6178: $22
    ld [hl+], a                                   ; $6179: $22
    ld [hl+], a                                   ; $617A: $22
    ld [hl+], a                                   ; $617B: $22
    ld [hl+], a                                   ; $617C: $22
    ld [hl+], a                                   ; $617D: $22
    ld [hl+], a                                   ; $617E: $22
    ld [hl+], a                                   ; $617F: $22
    Set16_M wVBlank_Func, Interrupt_VBlankFunc_Idle                                 ; $6187: $EA $E5 $C6
    ret                                           ; $618A: $C9


    xor a                                         ; $618B: $AF
    ld [rVBK], a                                 ; $618C: $EA $4F $FF
    ld a, $80                                     ; $618F: $3E $80
    ld hl, $9DA1                                  ; $6191: $21 $A1 $9D
    ld [hl+], a                                   ; $6194: $22
    ld [hl+], a                                   ; $6195: $22
    ld [hl+], a                                   ; $6196: $22
    ld [hl+], a                                   ; $6197: $22
    ld [hl+], a                                   ; $6198: $22
    ld [hl+], a                                   ; $6199: $22
    ld [hl+], a                                   ; $619A: $22
    ld [hl+], a                                   ; $619B: $22
    ld [hl+], a                                   ; $619C: $22
    ld [hl+], a                                   ; $619D: $22
    ld [hl+], a                                   ; $619E: $22
    ld [hl+], a                                   ; $619F: $22
    ld [hl+], a                                   ; $61A0: $22
    ld [hl+], a                                   ; $61A1: $22
    ld hl, $9DC1                                  ; $61A2: $21 $C1 $9D
    ld [hl+], a                                   ; $61A5: $22
    ld [hl+], a                                   ; $61A6: $22
    ld [hl+], a                                   ; $61A7: $22
    ld hl, $9DE1                                  ; $61A8: $21 $E1 $9D
    ld [hl+], a                                   ; $61AB: $22
    ld [hl+], a                                   ; $61AC: $22
    ld [hl+], a                                   ; $61AD: $22
    ld hl, $9E02                                  ; $61AE: $21 $02 $9E
    ld [hl+], a                                   ; $61B1: $22
    ld [hl+], a                                   ; $61B2: $22
    ld [hl+], a                                   ; $61B3: $22
    ld [hl+], a                                   ; $61B4: $22
    ld [hl+], a                                   ; $61B5: $22
    ld [hl+], a                                   ; $61B6: $22
    ld [hl+], a                                   ; $61B7: $22
    Set16_M wVBlank_Func, Interrupt_VBlankFunc_Idle                                 ; $61BF: $EA $E5 $C6
    ret                                           ; $61C2: $C9


INCLUDE "source/game/cardscene/cardscene_xx.asm"

INCLUDE "source/game/fightscene/tilefx/fightscene_tilefx.asm"
INCLUDE "source/game/fightscene/fightfx/fightscene_fightfx_pan_table.asm"
INCLUDE "source/game/fightscene/fightfx/fightscene_fightfx_move_table.asm"
INCLUDE "source/game/fightscene/tilefx/fightscene_tilefx_table.asm"
INCLUDE "source/game/fightscene/fightscene_arena_table.asm"
INCLUDE "source/game/fightscene/fightscene_xx.asm"

INCLUDE "assets/sprites/cardscene_battle_bitsets.asm"

    ; $762A